{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\crud\\\\frontend\\\\src\\\\components\\\\Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Add() {\n  _s();\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    dob: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch('http://localhost:5000/user', {\n      method: 'POST',\n      header: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    });\n    setNewItem({\n      username: '',\n      email: '',\n      dob: ''\n    });\n    na;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"Username :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        placeholder: \"Enter Username\",\n        value: newUser.username,\n        onChange: e => setNewUser({\n          ...newUser,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        placeholder: \"Enter Email\",\n        value: newUser.email,\n        onChange: e => setNewUser({\n          ...newUser,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), \"DOB\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"dob\",\n        placeholder: \"Enter DOB\",\n        value: newUser.dob,\n        onChange: e => setNewUser({\n          ...newUser,\n          dob: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: e => setNewUser({\n          username: '',\n          email: '',\n          dob: ''\n        }),\n        children: \" Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Add, \"3X3uVDdsn8m0FUa5cEwlhZ0Fo44=\", false, function () {\n  return [useNavigate];\n});\n_c = Add;\nexport default Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Add","_s","newUser","setNewUser","username","email","dob","navigate","handleSubmit","e","preventDefault","fetch","method","header","body","JSON","stringify","setNewItem","na","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","placeholder","value","onChange","target","type","onClick","_c","$RefreshReg$"],"sources":["D:/React/crud/frontend/src/components/Add.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction Add(){\r\n\r\n    const [newUser,setNewUser]=useState({\r\n        username:'',\r\n        email:'',\r\n        dob:'',\r\n    })\r\n\r\n    const navigate=useNavigate();\r\n\r\n    const handleSubmit =  async(e) =>{\r\n        e.preventDefault();\r\n\r\n        await fetch('http://localhost:5000/user',{\r\n            method:'POST',\r\n            header:{'Content-type':'application/json'},\r\n            body:JSON.stringify(newUser),\r\n\r\n        });\r\n\r\n        setNewItem({username:'',email:'',dob:''});\r\n        na\r\n\r\n    }\r\n        \r\n    return(\r\n        <div>\r\n            <h1> Add </h1>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                Username :\r\n                <input\r\n                name=\"username\"\r\n                placeholder=\"Enter Username\"\r\n                value={newUser.username}\r\n                onChange={(e) => setNewUser({...newUser,username:e.target.value})}\r\n                />\r\n                <br/>\r\n\r\n                Email\r\n                <input\r\n                name=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={newUser.email}\r\n                onChange={(e) => setNewUser({...newUser,email:e.target.value})}\r\n                />\r\n\r\n                DOB\r\n                <input\r\n                name=\"dob\"\r\n                placeholder=\"Enter DOB\"\r\n                value={newUser.dob}\r\n                onChange={(e) => setNewUser({...newUser,dob:e.target.value})}\r\n                />\r\n\r\n                <button type=\"submit\"> Add</button>\r\n\r\n                <button type=\"button\" onClick={(e) => setNewUser({username:'',email:'',dob:''})}> Reset</button>\r\n\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Add;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}